version: '3.7'
services:
  grafana:
    image: grafana/grafana:10.2.0
    container_name: grafana
    volumes:
      - /data/grafana:/var/lib/grafana
    depends_on:
      - proxy
      - influxdb
    networks:
      - monitoring
      - proxy
    restart: unless-stopped
    ulimits:
      nofile:
        soft: 65536
        hard: 65536
    ports:
      - "3000:3000"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.grafana.rule=Host(`monitoring.lotp.test`)"
      - "traefik.http.routers.grafana.entryPoints=https"
      - "traefik.http.routers.grafana.tls=true"
      - "traefik.http.routers.grafana.tls.certresolver=acme"
      - "traefik.http.routers.grafana.service=grafana"
      - "traefik.http.middlewares.compress.compress=true"
      - "traefik.http.routers.grafana.middlewares=compress"
      - "traefik.http.services.grafana.loadbalancer.server.port=3000"
      - "traefik.http.services.grafana.loadbalancer.passHostHeader=true"
      - "traefik.docker.network=proxy"
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "10"

  influxdb:
    container_name: influxdb
    image: influxdb:2.7.3
    restart: always
    depends_on:
      - proxy
    environment:
      - INFLUXDB_CONFIG_PATH=/etc/influxdb2
    volumes:
      - /data/influxdb:/var/lib/influxdb2 # SET THE DATA FOLDER TO THE CORRECT LOCATION
      - ./config/influxdb:/etc/influxdb2
    mem_limit: 4G
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "10"
    networks:
      - monitoring
      - proxy
    ports:
      - "8086:8086"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.influxdb.rule=Host(`influxdb.lotp.test`)"
      - "traefik.http.routers.influxdb.entryPoints=https"
      - "traefik.http.routers.influxdb.tls=true"
      - "traefik.http.routers.influxdb.tls.certresolver=acme"
      - "traefik.http.routers.influxdb.service=influxdb"
      - "traefik.http.middlewares.compress.compress=true"
      - "traefik.http.routers.influxdb.middlewares=compress"
      - "traefik.http.services.influxdb.loadbalancer.server.port=8086"
      - "traefik.http.services.influxdb.loadbalancer.passHostHeader=true"
      - "traefik.docker.network=proxy"

  telegraf:
    container_name: telegraf
    image: telegraf:1.28-alpine
    restart: always
    user: telegraf:999  # 999 is the GID for the docker group. This needs to be added to provide the docker.sock access
#    depends_on:
#      - proxy
#      - influxdb
    ports:
      - "162:162/udp"
    networks:
      - monitoring
      - proxy
    env_file:
      - ./config/telegraf/.env
    volumes:
      - ./config/telegraf/telegraf.conf:/etc/telegraf/telegraf.conf:ro
      - /var/run/docker.sock:/var/run/docker.sock
      - /:/hostfs:ro
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "10"

  proxy:
    image: traefik:v2.10
    container_name: proxy
    command: >
      --entryPoints.http.address=:80
      --entryPoints.https.address=:443
      --entrypoints.http.http.redirections.entryPoint.to=https
      --certificatesresolvers.acme.acme.email=jasper_home@hotmail.com
      --certificatesresolvers.acme.acme.storage='/acme/acme.json'
      --certificatesResolvers.acme.acme.httpChallenge.entryPoint=http
      --entrypoints.https.http.tls.certResolver=acme
      --providers.docker
      --providers.docker.network=proxy
      --providers.docker.exposedByDefault=false
      --log.level="INFO"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /acme
    networks:
      - proxy
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "10"

networks:
  monitoring:
    name: monitoring
  proxy:
    name: proxy